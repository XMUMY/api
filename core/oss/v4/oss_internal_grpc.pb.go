// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: oss/v4/oss_internal.proto

package v4

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	OSSInternal_ConfirmObject_FullMethodName = "/xmux.core.oss.v4.OSSInternal/ConfirmObject"
)

// OSSInternalClient is the client API for OSSInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Internal OSS service for inter-service communication
type OSSInternalClient interface {
	// Confirm that an object has been successfully uploaded and associated with a business entity.
	// Removes the 'status:unconfirmed' tag from the object.
	ConfirmObject(ctx context.Context, in *ConfirmObjectRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type oSSInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewOSSInternalClient(cc grpc.ClientConnInterface) OSSInternalClient {
	return &oSSInternalClient{cc}
}

func (c *oSSInternalClient) ConfirmObject(ctx context.Context, in *ConfirmObjectRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, OSSInternal_ConfirmObject_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OSSInternalServer is the server API for OSSInternal service.
// All implementations must embed UnimplementedOSSInternalServer
// for forward compatibility.
//
// Internal OSS service for inter-service communication
type OSSInternalServer interface {
	// Confirm that an object has been successfully uploaded and associated with a business entity.
	// Removes the 'status:unconfirmed' tag from the object.
	ConfirmObject(context.Context, *ConfirmObjectRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedOSSInternalServer()
}

// UnimplementedOSSInternalServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedOSSInternalServer struct{}

func (UnimplementedOSSInternalServer) ConfirmObject(context.Context, *ConfirmObjectRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmObject not implemented")
}
func (UnimplementedOSSInternalServer) mustEmbedUnimplementedOSSInternalServer() {}
func (UnimplementedOSSInternalServer) testEmbeddedByValue()                     {}

// UnsafeOSSInternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OSSInternalServer will
// result in compilation errors.
type UnsafeOSSInternalServer interface {
	mustEmbedUnimplementedOSSInternalServer()
}

func RegisterOSSInternalServer(s grpc.ServiceRegistrar, srv OSSInternalServer) {
	// If the following call pancis, it indicates UnimplementedOSSInternalServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&OSSInternal_ServiceDesc, srv)
}

func _OSSInternal_ConfirmObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OSSInternalServer).ConfirmObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OSSInternal_ConfirmObject_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OSSInternalServer).ConfirmObject(ctx, req.(*ConfirmObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OSSInternal_ServiceDesc is the grpc.ServiceDesc for OSSInternal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OSSInternal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "xmux.core.oss.v4.OSSInternal",
	HandlerType: (*OSSInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfirmObject",
			Handler:    _OSSInternal_ConfirmObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "oss/v4/oss_internal.proto",
}
