// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: oss/v4/oss.proto

package v4

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadPictureReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The business that the picture belongs to
	Biz string `protobuf:"bytes,1,opt,name=biz,proto3" json:"biz,omitempty"`
	// The picture data
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPictureReq) Reset() {
	*x = UploadPictureReq{}
	mi := &file_oss_v4_oss_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPictureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPictureReq) ProtoMessage() {}

func (x *UploadPictureReq) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v4_oss_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPictureReq.ProtoReflect.Descriptor instead.
func (*UploadPictureReq) Descriptor() ([]byte, []int) {
	return file_oss_v4_oss_proto_rawDescGZIP(), []int{0}
}

func (x *UploadPictureReq) GetBiz() string {
	if x != nil {
		return x.Biz
	}
	return ""
}

func (x *UploadPictureReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadPictureResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URL of the uploaded picture
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPictureResp) Reset() {
	*x = UploadPictureResp{}
	mi := &file_oss_v4_oss_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPictureResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPictureResp) ProtoMessage() {}

func (x *UploadPictureResp) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v4_oss_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPictureResp.ProtoReflect.Descriptor instead.
func (*UploadPictureResp) Descriptor() ([]byte, []int) {
	return file_oss_v4_oss_proto_rawDescGZIP(), []int{1}
}

func (x *UploadPictureResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_oss_v4_oss_proto protoreflect.FileDescriptor

const file_oss_v4_oss_proto_rawDesc = "" +
	"\n" +
	"\x10oss/v4/oss.proto\x12\x10xmux.core.oss.v4\"8\n" +
	"\x10UploadPictureReq\x12\x10\n" +
	"\x03biz\x18\x01 \x01(\tR\x03biz\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"%\n" +
	"\x11UploadPictureResp\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url2_\n" +
	"\x03OSS\x12X\n" +
	"\rUploadPicture\x12\".xmux.core.oss.v4.UploadPictureReq\x1a#.xmux.core.oss.v4.UploadPictureRespB%Z#git.xdea.xyz/XMUS/oss/api/oss/v4;v4b\x06proto3"

var (
	file_oss_v4_oss_proto_rawDescOnce sync.Once
	file_oss_v4_oss_proto_rawDescData []byte
)

func file_oss_v4_oss_proto_rawDescGZIP() []byte {
	file_oss_v4_oss_proto_rawDescOnce.Do(func() {
		file_oss_v4_oss_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_oss_v4_oss_proto_rawDesc), len(file_oss_v4_oss_proto_rawDesc)))
	})
	return file_oss_v4_oss_proto_rawDescData
}

var file_oss_v4_oss_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_oss_v4_oss_proto_goTypes = []any{
	(*UploadPictureReq)(nil),  // 0: xmux.core.oss.v4.UploadPictureReq
	(*UploadPictureResp)(nil), // 1: xmux.core.oss.v4.UploadPictureResp
}
var file_oss_v4_oss_proto_depIdxs = []int32{
	0, // 0: xmux.core.oss.v4.OSS.UploadPicture:input_type -> xmux.core.oss.v4.UploadPictureReq
	1, // 1: xmux.core.oss.v4.OSS.UploadPicture:output_type -> xmux.core.oss.v4.UploadPictureResp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_oss_v4_oss_proto_init() }
func file_oss_v4_oss_proto_init() {
	if File_oss_v4_oss_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_oss_v4_oss_proto_rawDesc), len(file_oss_v4_oss_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oss_v4_oss_proto_goTypes,
		DependencyIndexes: file_oss_v4_oss_proto_depIdxs,
		MessageInfos:      file_oss_v4_oss_proto_msgTypes,
	}.Build()
	File_oss_v4_oss_proto = out.File
	file_oss_v4_oss_proto_goTypes = nil
	file_oss_v4_oss_proto_depIdxs = nil
}
