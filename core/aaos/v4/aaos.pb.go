// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: api/aaos/v4/aaos.proto

package v4

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gender      string               `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Id          string               `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Programme   string               `protobuf:"bytes,4,opt,name=programme,proto3" json:"programme,omitempty"`
	Intake      *timestamp.Timestamp `protobuf:"bytes,5,opt,name=intake,proto3" json:"intake,omitempty"`
	Nationality string               `protobuf:"bytes,6,opt,name=nationality,proto3" json:"nationality,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{0}
}

func (x *Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Info) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Info) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Info) GetProgramme() string {
	if x != nil {
		return x.Programme
	}
	return ""
}

func (x *Info) GetIntake() *timestamp.Timestamp {
	if x != nil {
		return x.Intake
	}
	return nil
}

func (x *Info) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

type Timetable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classes    []*Timetable_Class   `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty"`
	LastUpdate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
}

func (x *Timetable) Reset() {
	*x = Timetable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timetable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timetable) ProtoMessage() {}

func (x *Timetable) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timetable.ProtoReflect.Descriptor instead.
func (*Timetable) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{1}
}

func (x *Timetable) GetClasses() []*Timetable_Class {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *Timetable) GetLastUpdate() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

type Courses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Courses_Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *Courses) Reset() {
	*x = Courses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Courses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Courses) ProtoMessage() {}

func (x *Courses) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Courses.ProtoReflect.Descriptor instead.
func (*Courses) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{2}
}

func (x *Courses) GetCourses() []*Courses_Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type Exams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exams      []*Exams_Exam        `protobuf:"bytes,1,rep,name=exams,proto3" json:"exams,omitempty"`
	LastUpdate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
}

func (x *Exams) Reset() {
	*x = Exams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exams) ProtoMessage() {}

func (x *Exams) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exams.ProtoReflect.Descriptor instead.
func (*Exams) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{3}
}

func (x *Exams) GetExams() []*Exams_Exam {
	if x != nil {
		return x.Exams
	}
	return nil
}

func (x *Exams) GetLastUpdate() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

type Transcript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Transcript_Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *Transcript) Reset() {
	*x = Transcript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transcript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcript) ProtoMessage() {}

func (x *Transcript) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcript.ProtoReflect.Descriptor instead.
func (*Transcript) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{4}
}

func (x *Transcript) GetSessions() []*Transcript_Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type Timetable_Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid      string               `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Name     string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lecturer string               `protobuf:"bytes,3,opt,name=lecturer,proto3" json:"lecturer,omitempty"`
	Room     string               `protobuf:"bytes,4,opt,name=room,proto3" json:"room,omitempty"`
	Begin    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=begin,proto3" json:"begin,omitempty"`
	End      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	// Day of week. Start from 1 (Monday).
	Day uint32 `protobuf:"varint,7,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Timetable_Class) Reset() {
	*x = Timetable_Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timetable_Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timetable_Class) ProtoMessage() {}

func (x *Timetable_Class) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timetable_Class.ProtoReflect.Descriptor instead.
func (*Timetable_Class) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Timetable_Class) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Timetable_Class) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Timetable_Class) GetLecturer() string {
	if x != nil {
		return x.Lecturer
	}
	return ""
}

func (x *Timetable_Class) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *Timetable_Class) GetBegin() *timestamp.Timestamp {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *Timetable_Class) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Timetable_Class) GetDay() uint32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Courses_Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Credit   uint32 `protobuf:"varint,2,opt,name=credit,proto3" json:"credit,omitempty"`
	Lecturer string `protobuf:"bytes,3,opt,name=lecturer,proto3" json:"lecturer,omitempty"`
}

func (x *Courses_Course) Reset() {
	*x = Courses_Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Courses_Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Courses_Course) ProtoMessage() {}

func (x *Courses_Course) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Courses_Course.ProtoReflect.Descriptor instead.
func (*Courses_Course) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Courses_Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Courses_Course) GetCredit() uint32 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *Courses_Course) GetLecturer() string {
	if x != nil {
		return x.Lecturer
	}
	return ""
}

type Exams_Exam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exam       string               `protobuf:"bytes,1,opt,name=exam,proto3" json:"exam,omitempty"`
	Begin      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=begin,proto3" json:"begin,omitempty"`
	End        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Venue      string               `protobuf:"bytes,4,opt,name=venue,proto3" json:"venue,omitempty"`
	CourseName string               `protobuf:"bytes,5,opt,name=courseName,proto3" json:"courseName,omitempty"`
	Type       string               `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Status     string               `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Exams_Exam) Reset() {
	*x = Exams_Exam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exams_Exam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exams_Exam) ProtoMessage() {}

func (x *Exams_Exam) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exams_Exam.ProtoReflect.Descriptor instead.
func (*Exams_Exam) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Exams_Exam) GetExam() string {
	if x != nil {
		return x.Exam
	}
	return ""
}

func (x *Exams_Exam) GetBegin() *timestamp.Timestamp {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *Exams_Exam) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Exams_Exam) GetVenue() string {
	if x != nil {
		return x.Venue
	}
	return ""
}

func (x *Exams_Exam) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *Exams_Exam) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Exams_Exam) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Transcript_Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session string                       `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Courses []*Transcript_Session_Course `protobuf:"bytes,2,rep,name=courses,proto3" json:"courses,omitempty"`
	Gpa     float32                      `protobuf:"fixed32,3,opt,name=gpa,proto3" json:"gpa,omitempty"`
	CGpa    float32                      `protobuf:"fixed32,4,opt,name=cGpa,proto3" json:"cGpa,omitempty"`
}

func (x *Transcript_Session) Reset() {
	*x = Transcript_Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transcript_Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcript_Session) ProtoMessage() {}

func (x *Transcript_Session) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcript_Session.ProtoReflect.Descriptor instead.
func (*Transcript_Session) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Transcript_Session) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *Transcript_Session) GetCourses() []*Transcript_Session_Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *Transcript_Session) GetGpa() float32 {
	if x != nil {
		return x.Gpa
	}
	return 0
}

func (x *Transcript_Session) GetCGpa() float32 {
	if x != nil {
		return x.CGpa
	}
	return 0
}

type Transcript_Session_Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Credit uint32  `protobuf:"varint,3,opt,name=credit,proto3" json:"credit,omitempty"`
	Grade  string  `protobuf:"bytes,4,opt,name=grade,proto3" json:"grade,omitempty"`
	Point  float32 `protobuf:"fixed32,5,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *Transcript_Session_Course) Reset() {
	*x = Transcript_Session_Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_aaos_v4_aaos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transcript_Session_Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcript_Session_Course) ProtoMessage() {}

func (x *Transcript_Session_Course) ProtoReflect() protoreflect.Message {
	mi := &file_api_aaos_v4_aaos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcript_Session_Course.ProtoReflect.Descriptor instead.
func (*Transcript_Session_Course) Descriptor() ([]byte, []int) {
	return file_api_aaos_v4_aaos_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Transcript_Session_Course) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Transcript_Session_Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Transcript_Session_Course) GetCredit() uint32 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *Transcript_Session_Course) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *Transcript_Session_Course) GetPoint() float32 {
	if x != nil {
		return x.Point
	}
	return 0
}

var File_api_aaos_v4_aaos_proto protoreflect.FileDescriptor

var file_api_aaos_v4_aaos_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x61, 0x6f, 0x73, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x61,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6e,
	0x74, 0x61, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0xd7, 0x02, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3c,
	0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73,
	0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0xcf, 0x01, 0x0a, 0x05, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x07, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x22, 0xd7, 0x02, 0x0a, 0x05, 0x45, 0x78, 0x61, 0x6d, 0x73, 0x12,
	0x33, 0x0a, 0x05, 0x65, 0x78, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e,
	0x76, 0x34, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x05, 0x65,
	0x78, 0x61, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x1a, 0xdc, 0x01, 0x0a, 0x04, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x61,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x61, 0x6d, 0x12, 0x30, 0x0a,
	0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12,
	0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xd9, 0x02, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x41,
	0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f,
	0x73, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x87, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x70, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x67, 0x70,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x47, 0x70, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x63, 0x47, 0x70, 0x61, 0x1a, 0x74, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0xd0, 0x02, 0x0a, 0x04,
	0x41, 0x41, 0x4f, 0x53, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x78,
	0x6d, 0x75, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x78,
	0x6d, 0x75, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73, 0x2e, 0x76, 0x34,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1d, 0x2e, 0x78, 0x6d, 0x75, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x61, 0x6f, 0x73,
	0x2e, 0x76, 0x34, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x27,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x2e, 0x78, 0x64, 0x65, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x58,
	0x4d, 0x55, 0x53, 0x2f, 0x61, 0x61, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x61, 0x6f,
	0x73, 0x2f, 0x76, 0x34, 0x3b, 0x76, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_aaos_v4_aaos_proto_rawDescOnce sync.Once
	file_api_aaos_v4_aaos_proto_rawDescData = file_api_aaos_v4_aaos_proto_rawDesc
)

func file_api_aaos_v4_aaos_proto_rawDescGZIP() []byte {
	file_api_aaos_v4_aaos_proto_rawDescOnce.Do(func() {
		file_api_aaos_v4_aaos_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_aaos_v4_aaos_proto_rawDescData)
	})
	return file_api_aaos_v4_aaos_proto_rawDescData
}

var file_api_aaos_v4_aaos_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_aaos_v4_aaos_proto_goTypes = []interface{}{
	(*Info)(nil),                      // 0: xmux.core.aaos.v4.Info
	(*Timetable)(nil),                 // 1: xmux.core.aaos.v4.Timetable
	(*Courses)(nil),                   // 2: xmux.core.aaos.v4.Courses
	(*Exams)(nil),                     // 3: xmux.core.aaos.v4.Exams
	(*Transcript)(nil),                // 4: xmux.core.aaos.v4.Transcript
	(*Timetable_Class)(nil),           // 5: xmux.core.aaos.v4.Timetable.Class
	(*Courses_Course)(nil),            // 6: xmux.core.aaos.v4.Courses.Course
	(*Exams_Exam)(nil),                // 7: xmux.core.aaos.v4.Exams.Exam
	(*Transcript_Session)(nil),        // 8: xmux.core.aaos.v4.Transcript.Session
	(*Transcript_Session_Course)(nil), // 9: xmux.core.aaos.v4.Transcript.Session.Course
	(*timestamp.Timestamp)(nil),       // 10: google.protobuf.Timestamp
	(*empty.Empty)(nil),               // 11: google.protobuf.Empty
}
var file_api_aaos_v4_aaos_proto_depIdxs = []int32{
	10, // 0: xmux.core.aaos.v4.Info.intake:type_name -> google.protobuf.Timestamp
	5,  // 1: xmux.core.aaos.v4.Timetable.classes:type_name -> xmux.core.aaos.v4.Timetable.Class
	10, // 2: xmux.core.aaos.v4.Timetable.lastUpdate:type_name -> google.protobuf.Timestamp
	6,  // 3: xmux.core.aaos.v4.Courses.courses:type_name -> xmux.core.aaos.v4.Courses.Course
	7,  // 4: xmux.core.aaos.v4.Exams.exams:type_name -> xmux.core.aaos.v4.Exams.Exam
	10, // 5: xmux.core.aaos.v4.Exams.lastUpdate:type_name -> google.protobuf.Timestamp
	8,  // 6: xmux.core.aaos.v4.Transcript.sessions:type_name -> xmux.core.aaos.v4.Transcript.Session
	10, // 7: xmux.core.aaos.v4.Timetable.Class.begin:type_name -> google.protobuf.Timestamp
	10, // 8: xmux.core.aaos.v4.Timetable.Class.end:type_name -> google.protobuf.Timestamp
	10, // 9: xmux.core.aaos.v4.Exams.Exam.begin:type_name -> google.protobuf.Timestamp
	10, // 10: xmux.core.aaos.v4.Exams.Exam.end:type_name -> google.protobuf.Timestamp
	9,  // 11: xmux.core.aaos.v4.Transcript.Session.courses:type_name -> xmux.core.aaos.v4.Transcript.Session.Course
	11, // 12: xmux.core.aaos.v4.AAOS.GetInfo:input_type -> google.protobuf.Empty
	11, // 13: xmux.core.aaos.v4.AAOS.GetTimetable:input_type -> google.protobuf.Empty
	11, // 14: xmux.core.aaos.v4.AAOS.GetCourses:input_type -> google.protobuf.Empty
	11, // 15: xmux.core.aaos.v4.AAOS.GetExams:input_type -> google.protobuf.Empty
	11, // 16: xmux.core.aaos.v4.AAOS.GetTranscript:input_type -> google.protobuf.Empty
	0,  // 17: xmux.core.aaos.v4.AAOS.GetInfo:output_type -> xmux.core.aaos.v4.Info
	1,  // 18: xmux.core.aaos.v4.AAOS.GetTimetable:output_type -> xmux.core.aaos.v4.Timetable
	2,  // 19: xmux.core.aaos.v4.AAOS.GetCourses:output_type -> xmux.core.aaos.v4.Courses
	3,  // 20: xmux.core.aaos.v4.AAOS.GetExams:output_type -> xmux.core.aaos.v4.Exams
	4,  // 21: xmux.core.aaos.v4.AAOS.GetTranscript:output_type -> xmux.core.aaos.v4.Transcript
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_aaos_v4_aaos_proto_init() }
func file_api_aaos_v4_aaos_proto_init() {
	if File_api_aaos_v4_aaos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_aaos_v4_aaos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timetable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Courses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transcript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timetable_Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Courses_Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exams_Exam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transcript_Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_aaos_v4_aaos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transcript_Session_Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_aaos_v4_aaos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_aaos_v4_aaos_proto_goTypes,
		DependencyIndexes: file_api_aaos_v4_aaos_proto_depIdxs,
		MessageInfos:      file_api_aaos_v4_aaos_proto_msgTypes,
	}.Build()
	File_api_aaos_v4_aaos_proto = out.File
	file_api_aaos_v4_aaos_proto_rawDesc = nil
	file_api_aaos_v4_aaos_proto_goTypes = nil
	file_api_aaos_v4_aaos_proto_depIdxs = nil
}
