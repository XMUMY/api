// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/auth/auth.proto

package auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CampusRole int32

const (
	CampusRole_none    CampusRole = 0
	CampusRole_student CampusRole = 1
	CampusRole_teacher CampusRole = 2
)

var CampusRole_name = map[int32]string{
	0: "none",
	1: "student",
	2: "teacher",
}

var CampusRole_value = map[string]int32{
	"none":    0,
	"student": 1,
	"teacher": 2,
}

func (x CampusRole) String() string {
	return proto.EnumName(CampusRole_name, int32(x))
}

func (CampusRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_82b5829f48cfb8e5, []int{0}
}

// Credential for authenticating user with campus ID and password.
type CampusIdPasswordCredential struct {
	CampusId             string   `protobuf:"bytes,1,opt,name=campusId,proto3" json:"campusId,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusIdPasswordCredential) Reset()         { *m = CampusIdPasswordCredential{} }
func (m *CampusIdPasswordCredential) String() string { return proto.CompactTextString(m) }
func (*CampusIdPasswordCredential) ProtoMessage()    {}
func (*CampusIdPasswordCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_82b5829f48cfb8e5, []int{0}
}

func (m *CampusIdPasswordCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CampusIdPasswordCredential.Unmarshal(m, b)
}
func (m *CampusIdPasswordCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CampusIdPasswordCredential.Marshal(b, m, deterministic)
}
func (m *CampusIdPasswordCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusIdPasswordCredential.Merge(m, src)
}
func (m *CampusIdPasswordCredential) XXX_Size() int {
	return xxx_messageInfo_CampusIdPasswordCredential.Size(m)
}
func (m *CampusIdPasswordCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusIdPasswordCredential.DiscardUnknown(m)
}

var xxx_messageInfo_CampusIdPasswordCredential proto.InternalMessageInfo

func (m *CampusIdPasswordCredential) GetCampusId() string {
	if m != nil {
		return m.CampusId
	}
	return ""
}

func (m *CampusIdPasswordCredential) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthUserReq struct {
	// Types that are valid to be assigned to Credential:
	//	*AuthUserReq_CampusIdPassword
	//	*AuthUserReq_FirebaseIdToken
	Credential           isAuthUserReq_Credential `protobuf_oneof:"credential"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AuthUserReq) Reset()         { *m = AuthUserReq{} }
func (m *AuthUserReq) String() string { return proto.CompactTextString(m) }
func (*AuthUserReq) ProtoMessage()    {}
func (*AuthUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_82b5829f48cfb8e5, []int{1}
}

func (m *AuthUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthUserReq.Unmarshal(m, b)
}
func (m *AuthUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthUserReq.Marshal(b, m, deterministic)
}
func (m *AuthUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthUserReq.Merge(m, src)
}
func (m *AuthUserReq) XXX_Size() int {
	return xxx_messageInfo_AuthUserReq.Size(m)
}
func (m *AuthUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthUserReq proto.InternalMessageInfo

type isAuthUserReq_Credential interface {
	isAuthUserReq_Credential()
}

type AuthUserReq_CampusIdPassword struct {
	CampusIdPassword *CampusIdPasswordCredential `protobuf:"bytes,1,opt,name=campusIdPassword,proto3,oneof"`
}

type AuthUserReq_FirebaseIdToken struct {
	FirebaseIdToken string `protobuf:"bytes,2,opt,name=firebaseIdToken,proto3,oneof"`
}

func (*AuthUserReq_CampusIdPassword) isAuthUserReq_Credential() {}

func (*AuthUserReq_FirebaseIdToken) isAuthUserReq_Credential() {}

func (m *AuthUserReq) GetCredential() isAuthUserReq_Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *AuthUserReq) GetCampusIdPassword() *CampusIdPasswordCredential {
	if x, ok := m.GetCredential().(*AuthUserReq_CampusIdPassword); ok {
		return x.CampusIdPassword
	}
	return nil
}

func (m *AuthUserReq) GetFirebaseIdToken() string {
	if x, ok := m.GetCredential().(*AuthUserReq_FirebaseIdToken); ok {
		return x.FirebaseIdToken
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AuthUserReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AuthUserReq_CampusIdPassword)(nil),
		(*AuthUserReq_FirebaseIdToken)(nil),
	}
}

type AuthUserResp struct {
	Uid                  string     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CampusRole           CampusRole `protobuf:"varint,2,opt,name=campusRole,proto3,enum=xmux.core.auth.v4.CampusRole" json:"campusRole,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AuthUserResp) Reset()         { *m = AuthUserResp{} }
func (m *AuthUserResp) String() string { return proto.CompactTextString(m) }
func (*AuthUserResp) ProtoMessage()    {}
func (*AuthUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_82b5829f48cfb8e5, []int{2}
}

func (m *AuthUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthUserResp.Unmarshal(m, b)
}
func (m *AuthUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthUserResp.Marshal(b, m, deterministic)
}
func (m *AuthUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthUserResp.Merge(m, src)
}
func (m *AuthUserResp) XXX_Size() int {
	return xxx_messageInfo_AuthUserResp.Size(m)
}
func (m *AuthUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_AuthUserResp proto.InternalMessageInfo

func (m *AuthUserResp) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *AuthUserResp) GetCampusRole() CampusRole {
	if m != nil {
		return m.CampusRole
	}
	return CampusRole_none
}

func init() {
	proto.RegisterEnum("xmux.core.auth.v4.CampusRole", CampusRole_name, CampusRole_value)
	proto.RegisterType((*CampusIdPasswordCredential)(nil), "xmux.core.auth.v4.CampusIdPasswordCredential")
	proto.RegisterType((*AuthUserReq)(nil), "xmux.core.auth.v4.AuthUserReq")
	proto.RegisterType((*AuthUserResp)(nil), "xmux.core.auth.v4.AuthUserResp")
}

func init() {
	proto.RegisterFile("proto/auth/auth.proto", fileDescriptor_82b5829f48cfb8e5)
}

var fileDescriptor_82b5829f48cfb8e5 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0x29, 0x12, 0xac, 0x53, 0xa2, 0x75, 0x12, 0x13, 0xd2, 0xc4, 0x3f, 0xe9, 0xc9, 0x90,
	0x58, 0x4d, 0xf5, 0xea, 0x41, 0xb8, 0x48, 0xbc, 0x98, 0x8a, 0x17, 0x3d, 0x98, 0xa5, 0x1d, 0x43,
	0x23, 0x74, 0xeb, 0x6e, 0x57, 0xf9, 0x40, 0x7e, 0x50, 0xbb, 0x0b, 0x05, 0x02, 0xe2, 0xa5, 0xe9,
	0xdb, 0x37, 0xf3, 0xde, 0xaf, 0xcd, 0xc2, 0x51, 0x2e, 0x78, 0xc1, 0x2f, 0x99, 0x2a, 0x46, 0xe6,
	0x11, 0x18, 0x8d, 0x87, 0xd3, 0x89, 0x9a, 0x06, 0x31, 0x17, 0x14, 0x98, 0xd3, 0xaf, 0x1b, 0x7f,
	0x00, 0x5e, 0x8f, 0x4d, 0x72, 0x25, 0xfb, 0xc9, 0x23, 0x93, 0xf2, 0x9b, 0x8b, 0xa4, 0x27, 0x28,
	0xa1, 0xac, 0x48, 0xd9, 0x18, 0x3d, 0xb0, 0xe3, 0xb9, 0xdb, 0xb6, 0xce, 0xac, 0xf3, 0xbd, 0x68,
	0xa1, 0xb5, 0x97, 0xcf, 0x37, 0xda, 0xf5, 0x99, 0x57, 0x69, 0xff, 0xc7, 0x02, 0xe7, 0xae, 0x6c,
	0x78, 0x96, 0x24, 0x22, 0xfa, 0xc4, 0x57, 0x70, 0xe3, 0xb5, 0x16, 0x93, 0xe7, 0x84, 0x17, 0xc1,
	0x06, 0x53, 0xb0, 0x1d, 0xe8, 0xbe, 0x16, 0x6d, 0x04, 0x61, 0x07, 0x0e, 0xde, 0x53, 0x41, 0x43,
	0x26, 0xa9, 0x9f, 0x0c, 0xf8, 0x07, 0x65, 0x33, 0x9e, 0x72, 0x78, 0xdd, 0xe8, 0xb6, 0x00, 0xe2,
	0x45, 0x9a, 0xff, 0x06, 0xad, 0x25, 0xa5, 0xcc, 0xd1, 0x85, 0x1d, 0x95, 0x56, 0x5f, 0xaa, 0x5f,
	0xf1, 0xb6, 0x9c, 0x37, 0x7d, 0x11, 0x1f, 0x93, 0x89, 0xdd, 0x0f, 0x8f, 0xb7, 0x22, 0xeb, 0xa1,
	0x68, 0x65, 0xa1, 0x73, 0x05, 0xb0, 0x74, 0xd0, 0x86, 0x46, 0xc6, 0x33, 0x72, 0x6b, 0xe8, 0xc0,
	0xae, 0x2c, 0x94, 0xc6, 0x70, 0x2d, 0x2d, 0x0a, 0x62, 0xf1, 0x88, 0x84, 0x5b, 0x0f, 0x9f, 0xa0,
	0xa1, 0x91, 0xf0, 0x01, 0xec, 0x0a, 0x0d, 0x4f, 0xfe, 0x28, 0x5c, 0xf9, 0xbb, 0xde, 0xe9, 0xbf,
	0xbe, 0xcc, 0xbb, 0xcd, 0x97, 0x86, 0x3e, 0x1f, 0x36, 0xcd, 0x35, 0xb8, 0xfe, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xb7, 0x94, 0x8f, 0xc8, 0x1f, 0x02, 0x00, 0x00,
}
